import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as i,c as e,d as t}from"./app-5d5dc79c.js";const n="/panshuilong.github.io/assets/20240304144357-99870388.png",r="/panshuilong.github.io/assets/20240304144509-cab91b1b.png",o="/panshuilong.github.io/assets/20240304144553-add1dfbd.png",s={},c=t('<h2 id="服务雪崩" tabindex="-1"><a class="header-anchor" href="#服务雪崩" aria-hidden="true">#</a> 服务雪崩</h2><p>服务雪崩是指一个服务失败，导致整条链路的服务都失败的情形，一般我们在项目解决的话就是两种方案，第一个是服务降级，第二个是服务熔断，如果流量太大的话，可以考虑限流</p><figure><img src="'+n+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="服务降级" tabindex="-1"><a class="header-anchor" href="#服务降级" aria-hidden="true">#</a> 服务降级</h2><p>服务降级是服务自我保护的一种方式，或者保护下游服务的一种方式，用于确保服务不会受请求突增影响变得不可用，确保服务不会崩溃</p><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>如果降级太多，则会触发熔断机制</p><h2 id="服务熔断" tabindex="-1"><a class="header-anchor" href="#服务熔断" aria-hidden="true">#</a> 服务熔断</h2><p>Hystrix 熔断机制，用于监控微服务调用情况， 默认是关闭的，如果需要开启需要在引导类上添加注解：@EnableCircuitBreaker如果检测到 10 秒内请求的失败率超过 50%，就触发熔断机制。之后每隔 5 秒重新尝试请求微服务，如果微服务不能响应，继续走熔断机制。如果微服务可达，则关闭熔断机制，恢复正常请求</p>',10),d=[c];function _(h,p){return i(),e("div",null,d)}const f=a(s,[["render",_],["__file","2023-03-04-服务雪崩，降级熔断.html.vue"]]);export{f as default};
